# @generated by gh-actions-gen, do not edit

---
"on":
  - push
  - pull_request
name: Jobs
jobs:
  linux-stable:
    name: linux stable
    runs-on: ubuntu-latest
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--all --all-targets -- --test-threads=1"
        timeout-minutes: 10
      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--doc"
      - name: doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
  macos-stable:
    name: macos stable
    runs-on: macos-latest
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--all --all-targets -- --test-threads=1"
        timeout-minutes: 10
      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--doc"
  windows-stable:
    name: windows stable
    runs-on: windows-latest
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--all --all-targets -- --test-threads=1"
        timeout-minutes: 10
      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--doc"
  linux-beta:
    name: linux beta
    runs-on: ubuntu-latest
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--all --all-targets -- --test-threads=1"
        timeout-minutes: 10
      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--doc"
      - name: doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
  linux-nightly:
    name: linux nightly
    runs-on: ubuntu-latest
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--all --all-targets -- --test-threads=1"
        timeout-minutes: 10
      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--doc"
      - name: doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
  super-linter:
    name: super-linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: super-linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: "false"
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          VALIDATE_JSCPD: "false"
          VALIDATE_COPYPASTE_JSCPD: "false"
          VALIDATE_PROTOBUF: "false"
          VALIDATE_RUST_2015: "false"
          VALIDATE_RUST_2018: "false"
          VALIDATE_RUST_CLIPPY: "false"
  mega-linter:
    name: mega-linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: mega-linter
        uses: megalinter/megalinter@v5
        env:
          VALIDATE_ALL_CODEBASE: "false"
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          VALIDATE_JSCPD: "false"
          VALIDATE_COPYPASTE_JSCPD: "false"
          VALIDATE_PROTOBUF: "false"
          VALIDATE_RUST_2015: "false"
          VALIDATE_RUST_2018: "false"
          VALIDATE_RUST_CLIPPY: "false"
  rustfmt-check:
    name: rustfmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: print version
        run: cargo fmt --version
        shell: bash
      - name: cargo fmt check
        run: cargo fmt -- --check
        shell: bash
  cargo-sync-readme:
    name: Check sync-readme
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install cargo sync-readme
        run: cargo install cargo-sync-readme
        shell: bash
      - name: sync-readme gh-actions-gen
        run: cd gh-actions-gen && cargo sync-readme --check
        shell: bash
